var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var dummyDependencyFile = require("./dummyDependencyFile");
var BaseSkill = (function () {
    function BaseSkill() {
    }
    //this function moved to  Base Excel Skill 
    // Sheet number still hardcoded, should be generated by the component handler
    BaseSkill.prototype.createImageJson = function (paramValueArr) {
        console.log("BaseSkill - createImageJson : " + paramValueArr);
    };
    BaseSkill.prototype.baseDummyFunc = function (paramValueArr) {
        console.log("BaseSkill - baseDummyFunc : " + paramValueArr);
    };
    BaseSkill.prototype.baseDummyFunc1 = function (paramValueArr) {
        console.log("BaseSkill - baseDummyFunc1 : " + paramValueArr);
    };
    return BaseSkill;
}());
var ExcelBaseSkill = (function (_super) {
    __extends(ExcelBaseSkill, _super);
    function ExcelBaseSkill() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    //this function moved to  Base Excel Skill 
    // Sheet number still hardcoded, should be generated by the component handler
    ExcelBaseSkill.prototype.createImageJson = function (paramValueArr) {
        console.log("ExcelBaseSkill - createImageJson : " + paramValueArr);
    };
    ExcelBaseSkill.prototype.baseDummyFunc = function (paramValueArr) {
        console.log("ExcelBaseSkill - baseDummyFunc : " + paramValueArr);
    };
    ExcelBaseSkill.prototype.ExcelBaseDummyFunc = function (paramValueArr) {
        console.log("ExcelBaseSkill - ExcelBaseDummyFunc : " + paramValueArr);
    };
    return ExcelBaseSkill;
}(BaseSkill));
var moveCellContent = (function (_super) {
    __extends(moveCellContent, _super);
    function moveCellContent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    //init DOC JSON 
    moveCellContent.prototype.createJsonPath = function (valueParam) {
        dummyDependencyFile.dummyFun1(valueParam);
        //return valueParam[0].path;
    };
    moveCellContent.prototype.getSelectedCell = function (paramValueArr) {
        return paramValueArr[0];
    };
    moveCellContent.prototype.getSelDragCell = function (paramValueArr) {
        //requires sheet name using init doc json
        var finalObject = {};
        finalObject["sheetNo"] = 1;
        finalObject["startRange"] = paramValueArr[1];
        finalObject["endRange"] = paramValueArr[2];
        finalObject = JSON.stringify(finalObject);
        return finalObject;
    };
    moveCellContent.prototype.createTooltipImagePath = function (paramValueArr) {
        return paramValueArr[0].path;
    };
    //this function to be moved to  Base Excel Skill 
    // to be done as soon as the Sheet number can be generated from the component handler 
    moveCellContent.prototype.createImageJson = function (paramValueArr) {
        var finalObject = {};
        finalObject['folderPath'] = paramValueArr[0].path;
        var sheetArr = [];
        for (var iterator = 0; iterator < paramValueArr[0].length; ++iterator) {
            sheetArr[iterator] = {};
            sheetArr[iterator]['sheetNo'] = 1;
            sheetArr[iterator]['gridImg'] = paramValueArr[0][iterator].gridImage.name;
            sheetArr[iterator]['rowImg'] = paramValueArr[0][iterator].rowImage.name;
            sheetArr[iterator]['colImg'] = paramValueArr[0][iterator].cellImage.name;
            sheetArr[iterator]['cellImg'] = paramValueArr[0][iterator].columnImage.name;
        }
        finalObject['sheetImages'] = sheetArr;
        finalObject = JSON.stringify(finalObject);
        return finalObject;
    };
    moveCellContent.prototype.createHighlightJson = function (paramValueArr) {
        // requires sheet number using Init Doc json
        var finalObject = {};
        finalObject["sheetNo"] = 1;
        finalObject["range"] = paramValueArr[1];
        finalObject = JSON.stringify(finalObject);
        return finalObject;
    };
    moveCellContent.prototype.createSheetCellData = function (paramValueArr) {
        var finalObject = {};
        finalObject["sheetNo"] = 1;
        finalObject["dataJSONPath"] = paramValueArr[1].path;
        finalObject = JSON.stringify(finalObject);
        return finalObject;
    };
    moveCellContent.prototype.getSelectedCellFinal = function (paramValueArr) {
        var finalArray = [];
        var valuearray = paramValueArr[0].split(":");
        valuearray[0].trim();
        valuearray[1].trim();
        var c1 = valuearray[0].toUpperCase().charAt(0);
        var c2 = valuearray[1].toUpperCase().charAt(0);
        var r1 = parseInt(valuearray[0].substring(1, valuearray[0].length));
        var r2 = parseInt(valuearray[1].substring(1, valuearray[0].length));
        finalArray.push(valuearray[0]);
        for (var iterator = 0; iterator <= c2.charCodeAt(0) - c1.charCodeAt(0); ++iterator) {
            for (var index = 0; index < r2 - r1; ++index) {
                if (iterator != 0 || index != 0)
                    finalArray.push(c1 + r1 + ":" + (String.fromCharCode(c1.charCodeAt(0) + iterator)) + (r1 + index));
            }
        }
        return finalArray;
    };
    return moveCellContent;
}(ExcelBaseSkill));
module.exports = new moveCellContent();
